// Code generated by microgen 1.0.4. DO NOT EDIT.

package transport

import (
	"context"
	datacollectionservice "esgrs/data_collection_service"
	endpoint "github.com/go-kit/kit/endpoint"
	opentracing "github.com/go-kit/kit/tracing/opentracing"
	opentracinggo "github.com/opentracing/opentracing-go"
)

func Endpoints(svc datacollectionservice.DataCollectionService) EndpointsSet {
	return EndpointsSet{
		GetCompanyByIDEndpoint: GetCompanyByIDEndpoint(svc),
		GetCompanyListEndpoint: GetCompanyListEndpoint(svc),
		GetRawDataEndpoint:     GetRawDataEndpoint(svc),
	}
}

// TraceServerEndpoints is used for tracing endpoints on server side.
func TraceServerEndpoints(endpoints EndpointsSet, tracer opentracinggo.Tracer) EndpointsSet {
	return EndpointsSet{
		GetCompanyByIDEndpoint: opentracing.TraceServer(tracer, "GetCompanyByID")(endpoints.GetCompanyByIDEndpoint),
		GetCompanyListEndpoint: opentracing.TraceServer(tracer, "GetCompanyList")(endpoints.GetCompanyListEndpoint),
		GetRawDataEndpoint:     opentracing.TraceServer(tracer, "GetRawData")(endpoints.GetRawDataEndpoint),
	}
}

func GetCompanyByIDEndpoint(svc datacollectionservice.DataCollectionService) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*GetCompanyByIDRequest)
		res0, res1 := svc.GetCompanyByID(arg0, req.Id)
		return &GetCompanyByIDResponse{Company: res0}, res1
	}
}

func GetRawDataEndpoint(svc datacollectionservice.DataCollectionService) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*GetRawDataRequest)
		res0, res1 := svc.GetRawData(arg0, req.CompanyID)
		return &GetRawDataResponse{Data: res0}, res1
	}
}

func GetCompanyListEndpoint(svc datacollectionservice.DataCollectionService) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		res0, res1 := svc.GetCompanyList(arg0)
		return &GetCompanyListResponse{Companies: res0}, res1
	}
}
