// Code generated by microgen 1.0.4. DO NOT EDIT.

package transport

import (
	"context"
	dataprocessingservice "esgrs/data_processing_service"
	endpoint "github.com/go-kit/kit/endpoint"
	opentracing "github.com/go-kit/kit/tracing/opentracing"
	opentracinggo "github.com/opentracing/opentracing-go"
)

func Endpoints(svc dataprocessingservice.DataProcessingService) EndpointsSet {
	return EndpointsSet{GetProcessedDataEndpoint: GetProcessedDataEndpoint(svc)}
}

// TraceServerEndpoints is used for tracing endpoints on server side.
func TraceServerEndpoints(endpoints EndpointsSet, tracer opentracinggo.Tracer) EndpointsSet {
	return EndpointsSet{GetProcessedDataEndpoint: opentracing.TraceServer(tracer, "GetProcessedData")(endpoints.GetProcessedDataEndpoint)}
}

func GetProcessedDataEndpoint(svc dataprocessingservice.DataProcessingService) endpoint.Endpoint {
	return func(arg0 context.Context, request interface{}) (interface{}, error) {
		req := request.(*GetProcessedDataRequest)
		res0, res1 := svc.GetProcessedData(arg0, req.CompanyID)
		return &GetProcessedDataResponse{Result: res0}, res1
	}
}
